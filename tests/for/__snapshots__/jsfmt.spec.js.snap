// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`breaking-source.coffee 1`] = `
for pastFragment, pastFragmentIndex in fragments[0...(fragmentIndex + 1)] by -111
  b

for pastFragment, pastFragmentIndex in fragments[fragmentIndex + 1] by -111111111
  b

for pastFragment, pastFragmentIndex in fragmentIndex + 1 by -11111111111111111111
  b

for pastFragment in [0...(fragmentIndex + 1)] by -1111111111111111111111111111111
  b

for pastFragment in a b by -11111111111111111111111111111111111111111111111111111
  b

for pastFragment in a b: c by -11111111111111111111111111111111111111111111111111
  b
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
for pastFragment, pastFragmentIndex in (
  fragments[0...(fragmentIndex + 1)]
) by -111
  b

for pastFragment, pastFragmentIndex in fragments[
  fragmentIndex + 1
] by -111111111
  b

for pastFragment, pastFragmentIndex in (
  fragmentIndex + 1
) by -11111111111111111111
  b

for pastFragment in (
  [0...(fragmentIndex + 1)]
) by -1111111111111111111111111111111
  b

for pastFragment in a(
  b
) by -11111111111111111111111111111111111111111111111111111
  b

for pastFragment in a(
  b: c
) by -11111111111111111111111111111111111111111111111111
  b

`;

exports[`breaking-when.coffee 1`] = `
for a in b when llllllllllloooooooonnnnnnggggggggg and oooooooowwwwwwwwwweeeeeeeee
  c
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
for a in b when (
  llllllllllloooooooonnnnnnggggggggg and oooooooowwwwwwwwwweeeeeeeee
)
  c

`;

exports[`postfix-parens.coffee 1`] = `
(-> a) for b in c

return a for b in c

return a b for c in d

return a: b for c in d

return (a for b in c)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(-> a) for b in c

return a for b in c

return a b for c in d

return a: b for c in d

return (a for b in c)

`;
