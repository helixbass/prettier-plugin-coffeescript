// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`binary.coffee 1`] = `
(class) + 1
(class a) + 1
(class extends b) + 1
(class a extends b) + 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class + 1
class a + 1
(class extends b) + 1
(class a extends b) + 1

`;

exports[`call.coffee 1`] = `
(class)(class)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(class) class

`;

exports[`empty.coffee 1`] = `
class A
  # comment

class A # comment

class A

class A
  m: ->
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class A
# comment

class A # comment

class A

class A
  m: ->

`;

exports[`general.coffee 1`] = `
class A extends B
  constructor: (@a) ->
    super()

  normalMethod: ->
    doSomething()

  @staticMethod: ->
  boundMethod: =>

  b = 3
  c: 4
  d: 5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class A extends B
  constructor: (@a) ->
    super()

  normalMethod: ->
    doSomething()

  @staticMethod: ->
  boundMethod: =>

  b = 3
  c: 4
  d: 5

`;

exports[`member.coffee 1`] = `
(class)[1]
(class).a
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(class)[1]
(class).a

`;

exports[`method.coffee 1`] = `
class C
  name: ###comment### ->
  other: ###comment### (a) ->

name: ###comment### ->
other: ###comment### (a) ->
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class C
  name: () ###comment### ->
  other: ###comment### (a) ->

name: ###comment### ->
other: ###comment### (a) ->

`;

exports[`property.coffee 1`] = `
class A
  foobar =
    # comment to break
    1 &&
    # comment to break again
    2

class B
  someInstanceProperty = this.props.foofoofoofoofoofoo &&
    this.props.barbarbarbar
  
  someInstanceProperty2 = { foo: this.props.foofoofoofoofoofoo &&
    this.props.barbarbarbar }
  
  someInstanceProperty3 =
  "foo"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class A
  foobar =
    # comment to break
    1 &&
    # comment to break again
    2

class B
  someInstanceProperty =
    this.props.foofoofoofoofoofoo && this.props.barbarbarbar

  someInstanceProperty2 =
    foo:
      this.props.foofoofoofoofoofoo && this.props.barbarbarbar

  someInstanceProperty3 = 'foo'

`;

exports[`ternary.coffee 1`] = `
if 1
  if (class) then 1 else 2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if 1
  if (class) then 1 else 2

`;
