// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`assignment-body.coffee 1`] = `
a = b if c

a = b while c

a = b for c in d

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb if c

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb while c

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb for c in d

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb if cccccccccccccccccccccccc

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb while cccccccccccccccccccccccc

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb for cccccccccccccccccccccccc in d

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb for ccc in d when eeeeeeee(fffffffff)

aaaaaaaaaaaaaaaaaaaaa = [bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb] if c

aaaaaaaaaaaaaaaaaaaaa = [bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb] while c

aaaaaaaaaaaaaaaaaaaaa = [bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb] for c in d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a = b if c

a = b while c

(a = b) for c in d

(
  aaaaaaaaaaaaaaaaaaaaa =
    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
) if c

(
  aaaaaaaaaaaaaaaaaaaaa =
    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
) while c

(
  aaaaaaaaaaaaaaaaaaaaa =
    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
) for c in d

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb if (
  cccccccccccccccccccccccc
)

aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb while (
  cccccccccccccccccccccccc
)

(
  aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
) for cccccccccccccccccccccccc in d

(aaaaaaaaaaaaaaaaaaaaa = bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb) for ccc in d when (
  eeeeeeee fffffffff
)

aaaaaaaaaaaaaaaaaaaaa = [
  bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
] if c

aaaaaaaaaaaaaaaaaaaaa = [
  bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
] while c

(aaaaaaaaaaaaaaaaaaaaa = [
  bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
]) for c in d

`;

exports[`return-indented-body.coffee 1`] = `
return ((fixer) ->
  fixer.removeRange rangeToRemove
) if /^\\s*$/.test(
  sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]
)

return ((fixer) ->
  fixer.removeRange rangeToRemove
) for a in b

return ((fixer) ->
  fixer.removeRange rangeToRemove
) while a

return (
  if a
    b
) if /^\\s*$/.test(
  sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]
)

return (
  if a then b
) if /^\\s*$/.test(
  sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]
)

return a((fixer) ->
  fixer.removeRange rangeToRemove
) if /^\\s*$/.test(
  sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]
)

a((fixer) ->
  fixer.removeRange rangeToRemove
) if /^\\s*$/.test(
  sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]
)

return a(
  if b
    c
) if /^\\s*$/.test(
  sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]
)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
return (
  (fixer) ->
    fixer.removeRange rangeToRemove
) if /^\\s*$/.test sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]

return (
  (fixer) ->
    fixer.removeRange rangeToRemove
) for a in b

return (
  (fixer) ->
    fixer.removeRange rangeToRemove
) while a

return (
  if a
    b
) if /^\\s*$/.test sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]

return (if a then b) if (
  /^\\s*$/.test sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]
)

return a((fixer) ->
  fixer.removeRange rangeToRemove
) if /^\\s*$/.test sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]

a((fixer) ->
  fixer.removeRange rangeToRemove
) if /^\\s*$/.test sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]

return a(
  if b
    c
) if /^\\s*$/.test sourceCode.text.substring rangeToRemove[0], rangeToRemove[1]

`;
