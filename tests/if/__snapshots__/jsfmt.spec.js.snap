// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`chain-condition.coffee 1`] = `
if (
  sourceCode
    .getText()
    .slice leftCurly.range[1], tokenAfterLeftCurly.range[0]
    .trim()
)
  null
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if (
  sourceCode
    .getText()
    .slice leftCurly.range[1], tokenAfterLeftCurly.range[0]
    .trim()
)
  null

`;

exports[`dont-break-condition.coffee 1`] = `
if a in [bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccccccccc]
  d

d unless a in [bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, ccccccccccccccccccccccccccccccccccccc]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if a in [
  bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
  ccccccccccccccccccccccccccccccccccccc
]
  d

d unless a in [
  bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
  ccccccccccccccccccccccccccccccccccccc
]

`;

exports[`else.coffee 1`] = `
f = ->
  if position
    return name: pair
  else
    return {name: pair.substring(0, position), value: pair.substring(position + 1)}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
f = ->
  if position
    return name: pair
  else
    return name: pair.substring(0, position), value: pair.substring position + 1

`;

exports[`nested-inline.coffee 1`] = `
if true then id(if false then undefined else nonce)

x = if true then id(if false then undefined else nonce)

if true then a + id(if false then undefined else nonce)

x = if true then a + id(if false then undefined else nonce)

if true then id(a + if false then undefined else nonce)

x = if true then id(a + if false then undefined else nonce)

if true then id(if false then undefined)

if true then id(if false then undefined) else no

x = if true then id(if false then undefined)

x = if true then id(if false then undefined) else no

if true
  id(if false then undefined else nonce)

x = if true
  id(if false then undefined)
else
  no
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if true then id (if false then undefined else nonce)

x = if true then id (if false then undefined else nonce)

if true then a + id (if false then undefined else nonce)

x = if true then a + id (if false then undefined else nonce)

if true then id a + (if false then undefined else nonce)

x = if true then id a + (if false then undefined else nonce)

if true then id if false then undefined

if true then id (if false then undefined) else no

x = if true then id if false then undefined

x = if true then id (if false then undefined) else no

if true
  id if false then undefined else nonce

x = if true
  id if false then undefined
else
  no

`;

exports[`postfix.coffee 1`] = `
a if b
a unless b

->
  return a if b
->
  doSomething()
  return a unless b

f() if b

->
  return unless some(veryVeryVeryVeryVeryLong, condition, isActuallyFalsyCausingThisToReturn)

  return some(veryVeryVeryVeryVeryLong, returnValue, thatIsLongEnoughToBreakLineItself) unless someCondition

  otherwise()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a if b
a unless b

->
  return a if b
->
  doSomething()
  return a unless b

f() if b

->
  return unless some(
    veryVeryVeryVeryVeryLong
    condition
    isActuallyFalsyCausingThisToReturn
  )

  return some(
    veryVeryVeryVeryVeryLong
    returnValue
    thatIsLongEnoughToBreakLineItself
  ) unless someCondition

  otherwise()

`;
